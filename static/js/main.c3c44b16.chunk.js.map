{"version":3,"sources":["types/MainFilter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["MainFilter","TodoList","todos","onSelect","selectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","onQuery","onClear","query","onChange","event","target","value","active","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getUser","userId","TodoModal","onClose","useState","user","setUser","useEffect","a","loadedUser","userFetch","href","email","name","App","setTodos","isLoaded","setIsLoaded","setSelectedTodo","filterPosition","setFilterPosition","setQuery","data","todosFetch","filteredTodos","position","searchQuery","filter","toLowerCase","includes","length","seacrhTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3c44b16.chunk.js","sourcesContent":["export enum MainFilter {\n  all = '',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onSelect: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props>\n= ({ todos, onSelect, selectedTodo }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={todo.completed\n                ? 'has-text-success' : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                onSelect(todo);\n              }}\n            >\n              <span className=\"icon\">\n                <i className={selectedTodo\n                  ? 'far fa-eye-slash' : 'far fa-eye'}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { MainFilter } from '../../types/MainFilter';\n\ntype Props = {\n  onSelect: (position: string) => void;\n  onQuery: (query: string) => void;\n  onClear: () => void;\n  query: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onSelect, onQuery, onClear, query,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={event => onSelect(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value={MainFilter.active}>Active</option>\n          <option value={MainFilter.completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={event => onQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={onClear}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nexport function wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  onClose: () => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    async function userFetch() {\n      const loadedUser = await getUser(todo.userId);\n\n      setUser(loadedUser);\n    }\n\n    userFetch();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nimport { Todo } from './types/Todo';\nimport { MainFilter } from './types/MainFilter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterPosition, setFilterPosition] = useState('');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    async function todosFetch() {\n      const data = await getTodos();\n\n      setTodos(data);\n      setIsLoaded(true);\n    }\n\n    todosFetch();\n  }, []);\n\n  const selectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const closeTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  const seacrhTodos = (position: string, searchQuery: string) => {\n    switch (position) {\n      case MainFilter.active:\n        return todos.filter(todo => !todo.completed\n           && todo.title.toLowerCase().includes(searchQuery.toLowerCase()));\n\n      case MainFilter.completed:\n        return todos.filter(todo => todo.completed\n          && todo.title.toLowerCase().includes(searchQuery.toLowerCase()));\n\n      default:\n        if (searchQuery.length > 0) {\n          return todos.filter(\n            todo => todo.title.toLowerCase().includes(searchQuery.toLowerCase()),\n          );\n        }\n\n        return todos;\n    }\n  };\n\n  const newQuery = (searchQuery: string) => {\n    setQuery(searchQuery);\n  };\n\n  const emptyQuery = () => {\n    setQuery('');\n  };\n\n  const filteredTodos = seacrhTodos(filterPosition, query);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onSelect={setFilterPosition}\n                onQuery={newQuery}\n                onClear={emptyQuery}\n                query={query}\n\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoaded ? <Loader /> : (\n                <TodoList\n                  todos={filteredTodos}\n                  onSelect={selectTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal todo={selectedTodo} onClose={closeTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}